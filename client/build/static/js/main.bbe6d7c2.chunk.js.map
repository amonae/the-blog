{"version":3,"sources":["pages/Landing/landing.module.scss","components/TextEditor/text-editor.module.scss","components/AlertDialog/index.js","contexts/OptionsMenuContext.js","components/OptionsMenu/index.js","contexts/ModeContext.js","contexts/TimeLimitContext.js","components/ModeMenu/ModeMenuItem/ModeMenuItem.js","components/WritingModes/PromptMode/index.js","components/WritingModes/TimeLimitMode/index.js","components/WritingModes/WordCountMode/index.js","components/ModeMenu/ModeModal/ModeModal.js","components/ModeMenu/index.js","components/Header/CreateNewHeader/index.js","components/TextEditor/index.js","gql.js","pages/Loading/index.js","pages/CreateNew/index.js","contexts/SearchContext.js","contexts/UserContext.js","contexts/NewPostContext.js","components/Header/index.js","components/Header/writeon.svg","Layout.js","components/NoteCard/index.js","pages/SearchResults/index.js","pages/Home/index.js","pages/Login/index.js","pages/NotFound/index.js","ProtectedRoute.js","pages/Landing/writeon-demo.png","pages/Landing/writeon-search-demo.gif","pages/Landing/writeon-editor-demo.gif","pages/Landing/index.js","pages/Logout/index.js","App.js","index.js","utils.js","components/Header/header.module.scss","pages/Login/login.module.scss","components/ModeMenu/mode-menu.module.scss","layout.module.scss","components/WritingModes/writing-modes.module.scss","pages/CreateNew/create-new.module.scss","pages/Home/home.module.scss","components/NoteCard/note-card.module.scss"],"names":["module","exports","AlertDialog","props","isOpen","leastDestructiveRef","onClose","deleteAlertRef","closeDeleteAlert","handleDelete","isCentered","fontSize","fontWeight","ref","onClick","colorScheme","ml","deletePostErrorToast","createStandaloneToast","OptionsMenuContext","createContext","OptionsMenuProvider","useState","isDeleteAlertOpen","setIsDeleteAlertOpen","useRef","Provider","value","deletePostErrorT","title","description","status","duration","isClosable","children","OptionsMenu","useContext","aria-label","text","as","IconButton","icon","menuIcon","variant","className","menuButton","e","stopPropagation","setClickedPostId","ModeContext","TimeLimitContext","ModeMenuItem","onOpen","currentMode","modeDispatch","toggledSwitches","timeLimitDispatch","handleClick","isToggled","type","payload","includes","isDisabled","styles","isChecked","onChange","newToggledSwitches","filter","toggledSwitch","handleToggle","PromptMode","promptModeError","allowMouseWheel","size","maxW","min","max","defaultValue","Number","changeNumberOfWords","errorMessage","TimeLimitMode","timeLimitNumberInputRef","isCountdownActive","count","spacing","WordCountMode","numberInputRef","wordCountGoal","ModeModal","mode","quillEditor","getWords","activateCountdown","handleModalCancel","closeOnOverlayClick","motionPreset","onEsc","pb","style","width","margin","pt","m","mr","current","firstChild","DropdownModeMenu","isModalOpen","closeOnSelect","closeOnBlur","Button","isActive","rightIcon","CreateNewHeader","words","handleTimeLimitMode","timeLimitMode","wordCountMode","promptMode","wordCount","updatePostLoading","onSaveClick","onBackBtnClick","onAlertClick","cursor","isLoading","loadingText","isRound","length","alignSelf","map","word","index","TextEditor","quillEditorRef","getWordCount","postTitle","currentPost","scrollingContainer","onKeyUp","theme","CREATE_POST","gql","UPDATE_POST","GET_POST","GET_ALL_POSTS","DELETE_POST","Loading","mt","thickness","speed","color","CreateNew","timeLimit","initialState","timesUpToast","useToast","postLengthErrorToast","id","useParams","currentPostId","setCurrentPost","redirectToHome","setRedirectToHome","loading","setLoading","history","useHistory","sizes","useBreakpointValue","base","md","useMutation","onCompleted","updatePostSuccessToast","updatePost","updatePostError","error","currentPostError","useQuery","variables","getPostById","fetchPolicy","deletePost","deletePostError","useEffect","deltaContent","JSON","parse","editor","setContents","ops","Object","entries","key","push","to","textContents","getText","deltaContents","getContents","stringify","textContent","updatePostErrorToast","handleSave","getEditor","match","NaN","SearchContext","UserContext","NewPostContext","Header","classname","Layout","redirectToLogout","setNewPost","setSearchInput","setSearchBarFocused","useDisclosure","postTitleInput","createPost","_id","createPostError","data","called","a","newTitle","toString","generatePath","href","src","writeOn","placeholder","bg","border","target","handleInput","onFocus","onBlur","_focus","backgroundColor","shadow","settToLogout","initialFocusRef","marginTop","createNewPost","NoteCard","gridView","redirectToPost","setRedirectToPost","Truncate","lines","SearchResults","posts","searchInput","results","setResults","matches","post","regex","RegExp","filterSearch","Home","user","setPosts","setGridView","sortBy","setSortBy","sortOrder","setSortOrder","clickedPostId","notifyOnNetworkStatusChange","refetchAllPosts","refetch","sortPosts","b","property","firstElem","toUpperCase","secondElem","date1","Date","date2","sortedTitles","slice","sort","sortedCreatedDates","sortedModifiedDates","mb","justifyContent","justifySelf","Login","action","method","htmlFor","name","NotFound","h","ProtectedRoute","Component","component","rest","render","pathname","state","from","location","Landing","scrollPosition","setScrollPosition","toggleMobileMenu","setToggleMobileMenu","handleScroll","position","window","pageYOffset","useLayoutEffect","addEventListener","passive","removeEventListener","disabled","writeOnDemo","alt","Feature","heading","image","editorDemo","imageAlt","searchDemo","Logout","setUser","fetch","credentials","App","exact","path","httpLink","createHttpLink","uri","client","ApolloClient","cache","InMemoryCache","link","ApolloLink","Compose","components","reduceRight","acc","Comp","rootElement","document","getElementById","ReactDOM","then","response","json","numberOfWords","useReducer","searchBar","searchBarFocused","callback","delay","savedCallback","setInterval","clearInterval","useInterval","newPost"],"mappings":"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","file":"static/js/main.bbe6d7c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"writeon-landing\":\"landing_writeon-landing__3rIM5\",\"header-right\":\"landing_header-right__2gDPL\",\"writeon-logo\":\"landing_writeon-logo__222y3\",\"login\":\"landing_login__1c9tT\",\"signup\":\"landing_signup__19zcr\",\"mobile-menu-icon\":\"landing_mobile-menu-icon__tlIKd\",\"mobile-menu\":\"landing_mobile-menu__DKlPW\",\"mobile-menu-hidden\":\"landing_mobile-menu-hidden__1GcmD\",\"signup-mobile\":\"landing_signup-mobile__3i5-U\",\"login-mobile\":\"landing_login-mobile__2k2ls\",\"container\":\"landing_container__EVQUI\",\"header\":\"landing_header__vLyDl\",\"subtitle\":\"landing_subtitle__18pkx\",\"hero-img\":\"landing_hero-img__2tDPU\",\"features\":\"landing_features__2wP81\",\"features-container\":\"landing_features-container__33VDo\",\"feature\":\"landing_feature__1aqVp\",\"feature-flipped\":\"landing_feature-flipped__20JUd\",\"feature-img\":\"landing_feature-img__Bqm8F\",\"feature-flipped-img\":\"landing_feature-flipped-img__3KKnb\",\"text-container\":\"landing_text-container__28wMY\",\"feature-heading\":\"landing_feature-heading__1hOiz\",\"feature-description\":\"landing_feature-description__bAgDe\",\"footer\":\"landing_footer__2vNF4\",\"footer-right\":\"landing_footer-right__3cVQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-title\":\"text-editor_post-title__Ynm2U\"};","import {\r\n  AlertDialog as ChakraAlertDialog,\r\n  AlertDialogOverlay,\r\n  AlertDialogHeader,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogContent,\r\n  Button\r\n} from '@chakra-ui/react';\r\n\r\nexport function AlertDialog(props) {\r\n  const {\r\n    isOpen,\r\n    leastDestructiveRef,\r\n    onClose,\r\n    deleteAlertRef,\r\n    closeDeleteAlert,\r\n    handleDelete\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <ChakraAlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={leastDestructiveRef}\r\n        onClose={onClose}\r\n        isCentered\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Delete Post\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Are you sure you want to delete this post? This action cannot be\r\n              undone!\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button ref={deleteAlertRef} onClick={closeDeleteAlert}>\r\n                Cancel\r\n              </Button>\r\n              <Button colorScheme=\"red\" onClick={handleDelete} ml={3}>\r\n                Delete\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </ChakraAlertDialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { createContext, useRef, useState } from 'react';\r\nimport { createStandaloneToast } from '@chakra-ui/react';\r\n\r\nconst deletePostErrorToast = createStandaloneToast();\r\n\r\nexport const OptionsMenuContext = createContext();\r\n\r\nexport function OptionsMenuProvider(props) {\r\n  const [isDeleteAlertOpen, setIsDeleteAlertOpen] = useState(false);\r\n  const closeDeleteAlert = () => setIsDeleteAlertOpen(false);\r\n  const deleteAlertRef = useRef();\r\n\r\n  const deletePostErrorT = () =>\r\n    deletePostErrorToast({\r\n      title: 'An error has occured.',\r\n      description: 'There was an issue deleting your note. Please try again.',\r\n      status: 'error',\r\n      duration: 5000,\r\n      isClosable: true\r\n    });\r\n\r\n  return (\r\n    <OptionsMenuContext.Provider\r\n      value={{\r\n        isDeleteAlertOpen: isDeleteAlertOpen,\r\n        setIsDeleteAlertOpen: setIsDeleteAlertOpen,\r\n        closeDeleteAlert: closeDeleteAlert,\r\n        deleteAlertRef: deleteAlertRef,\r\n        deletePostErrorT: deletePostErrorT\r\n      }}\r\n    >\r\n      {props.children}\r\n    </OptionsMenuContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  IconButton,\r\n  Menu,\r\n  MenuButton,\r\n  MenuItem,\r\n  MenuList\r\n} from '@chakra-ui/react';\r\nimport { OptionsMenuContext } from '../../contexts/OptionsMenuContext';\r\n\r\nexport function OptionsMenu(props) {\r\n  const { setIsDeleteAlertOpen } = useContext(OptionsMenuContext);\r\n  return (\r\n    <>\r\n      <Menu>\r\n        <MenuButton\r\n          aria-label=\"More Menu\"\r\n          text=\"More Menu\"\r\n          as={IconButton}\r\n          icon={props.menuIcon}\r\n          variant=\"unstyled\"\r\n          className={props.menuButton}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            if (props.setClickedPostId) {\r\n              props.setClickedPostId();\r\n            }\r\n          }}\r\n        />\r\n        <MenuList>\r\n          <MenuItem\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              setIsDeleteAlertOpen(true);\r\n            }}\r\n          >\r\n            Delete Post\r\n          </MenuItem>\r\n        </MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import React, { createContext, useReducer, useRef } from 'react';\r\nimport { useDisclosure } from '@chakra-ui/react';\r\n\r\nexport const ModeContext = createContext();\r\n\r\nexport function ModeProvider(props) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const numberInputRef = useRef();\r\n\r\n  const initialState = {\r\n    mode: '',\r\n    wordCountGoal: '',\r\n    wordCount: 0,\r\n    timeLimitMode: false,\r\n    wordCountMode: false,\r\n    promptMode: false,\r\n    words: [],\r\n    numberOfWords: 0,\r\n    promptModeError: null,\r\n    toggledSwitches: []\r\n  };\r\n\r\n  const [state, modeDispatch] = useReducer(reducer, initialState);\r\n\r\n  function reducer(state, action) {\r\n    const { type, payload } = action;\r\n    return { ...state, [type]: payload };\r\n  }\r\n\r\n  function getWords() {\r\n    if (numberOfWords > 10) {\r\n      return modeDispatch({\r\n        type: 'promptModeError',\r\n        payload: { errorMessage: 'Number must be below 10.' }\r\n      });\r\n    } else {\r\n      modeDispatch({ type: 'promptModeError', payload: null });\r\n    }\r\n\r\n    fetch(`https://random-word-api.herokuapp.com/word?number=${numberOfWords}`)\r\n      .then((response) => response.json())\r\n      .then((data) => modeDispatch({ type: 'words', payload: data }));\r\n  }\r\n\r\n  const {\r\n    mode,\r\n    wordCountGoal,\r\n    wordCount,\r\n    timeLimitMode,\r\n    wordCountMode,\r\n    promptMode,\r\n    words,\r\n    numberOfWords,\r\n    promptModeError,\r\n    toggledSwitches\r\n  } = state;\r\n\r\n  return (\r\n    <ModeContext.Provider\r\n      value={{\r\n        mode: mode,\r\n        isOpen: isOpen,\r\n        onOpen: onOpen,\r\n        onClose: onClose,\r\n        wordCountGoal: wordCountGoal,\r\n        wordCount: wordCount,\r\n        timeLimitMode: timeLimitMode,\r\n        wordCountMode: wordCountMode,\r\n        promptMode: promptMode,\r\n        words: words,\r\n        getWords: getWords,\r\n        numberOfWords: numberOfWords,\r\n        promptModeError: promptModeError,\r\n        toggledSwitches: toggledSwitches,\r\n        numberInputRef: numberInputRef,\r\n        modeDispatch: modeDispatch,\r\n        initialState: initialState\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModeContext.Provider>\r\n  );\r\n}\r\n","import React, { createContext, useContext, useReducer, useRef } from 'react';\r\nimport { useInterval } from '../utils';\r\nimport { ModeContext } from './ModeContext';\r\n\r\nexport const TimeLimitContext = createContext();\r\n\r\nexport function TimeLimitProvider(props) {\r\n  const { toggledSwitches } = useContext(ModeContext);\r\n  const initialState = {\r\n    timeLimit: null,\r\n    isCountdownActive: false,\r\n    count: null\r\n  };\r\n\r\n  const [state, timeLimitDispatch] = useReducer(reducer, initialState);\r\n  const { timeLimit, isCountdownActive, count } = state;\r\n\r\n  const timeLimitNumberInputRef = useRef();\r\n\r\n  function reducer(state, action) {\r\n    const { type, payload } = action;\r\n    return { ...state, [type]: payload };\r\n  }\r\n\r\n  useInterval(\r\n    () => {\r\n      if (!count || count <= 0 || !toggledSwitches.includes('timeLimitMode')) {\r\n        timeLimitDispatch({ type: 'isCountdownActive', payload: false });\r\n        return;\r\n      }\r\n      if (!isCountdownActive || count <= 0) {\r\n        return;\r\n      }\r\n      timeLimitDispatch({ type: 'count', payload: count - 1 });\r\n    },\r\n    count > 0 ? 1000 : null\r\n  );\r\n\r\n  function activateCountdown() {\r\n    const value = timeLimitNumberInputRef.current.value;\r\n\r\n    if (value <= 0) {\r\n      return;\r\n    }\r\n\r\n    timeLimitDispatch({ type: 'timeLimit', payload: value * 60 });\r\n    timeLimitDispatch({ type: 'count', payload: value * 60 + 1 });\r\n    timeLimitDispatch({ type: 'isCountdownActive', payload: true });\r\n  }\r\n\r\n  return (\r\n    <TimeLimitContext.Provider\r\n      value={{\r\n        timeLimit: timeLimit,\r\n        timeLimitNumberInputRef: timeLimitNumberInputRef,\r\n        activateCountdown: activateCountdown,\r\n        isCountdownActive: isCountdownActive,\r\n        count: count,\r\n        timeLimitDispatch: timeLimitDispatch\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TimeLimitContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styles from '../mode-menu.module.scss';\r\nimport { Box, MenuItem, Switch, Text } from '@chakra-ui/react';\r\nimport { ModeContext } from '../../../contexts/ModeContext';\r\nimport { TimeLimitContext } from '../../../contexts/TimeLimitContext';\r\n\r\nexport function ModeMenuItem({ onOpen, currentMode, text }) {\r\n  const { modeDispatch, toggledSwitches } = useContext(ModeContext);\r\n  const { timeLimitDispatch } = useContext(TimeLimitContext);\r\n\r\n  function handleClick() {\r\n    if (isToggled) {\r\n      modeDispatch({ type: 'mode', payload: currentMode });\r\n      onOpen();\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  function isToggled() {\r\n    return toggledSwitches.includes(currentMode);\r\n  }\r\n\r\n  function handleToggle() {\r\n    if (!toggledSwitches.includes(currentMode)) {\r\n      modeDispatch({\r\n        type: 'toggledSwitches',\r\n        payload: [...toggledSwitches, currentMode]\r\n      });\r\n\r\n      handleClick();\r\n    } else {\r\n      const newToggledSwitches = toggledSwitches.filter(\r\n        (toggledSwitch) => toggledSwitch !== currentMode\r\n      );\r\n\r\n      modeDispatch({\r\n        type: 'toggledSwitches',\r\n        payload: newToggledSwitches\r\n      });\r\n\r\n      switch (currentMode) {\r\n        case 'wordCountMode':\r\n          modeDispatch({ type: 'wordCountGoal', payload: null });\r\n          break;\r\n        case 'timeLimitMode':\r\n          timeLimitDispatch({ type: 'timeLimit', payload: null });\r\n          timeLimitDispatch({\r\n            type: 'isCountdownActive',\r\n            payload: false\r\n          });\r\n          timeLimitDispatch({ type: 'count', payload: null });\r\n          break;\r\n        case 'promptMode':\r\n          modeDispatch({ type: 'words', payload: [] });\r\n          modeDispatch({ type: 'promptModeError', payload: null });\r\n          modeDispatch({ type: 'numberOfWords', payload: 0 });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuItem isDisabled={!isToggled()} onClick={() => handleClick()}>\r\n        <Text>{text}</Text>\r\n      </MenuItem>\r\n      <Box className={styles['toggle-container']}>\r\n        <Switch isChecked={isToggled()} onChange={() => handleToggle()} />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styles from '../writing-modes.module.scss';\r\nimport {\r\n  HStack,\r\n  NumberDecrementStepper,\r\n  NumberIncrementStepper,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport { ModeContext } from '../../../contexts/ModeContext';\r\n\r\nexport function PromptMode() {\r\n  const { modeDispatch, promptModeError } = useContext(ModeContext);\r\n\r\n  function changeNumberOfWords(value) {\r\n    modeDispatch({ type: 'numberOfWords', payload: Number(value) });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HStack>\r\n        <NumberInput\r\n          className={styles['number-input']}\r\n          allowMouseWheel\r\n          size=\"md\"\r\n          maxW={24}\r\n          min={0}\r\n          max={10}\r\n          defaultValue={0}\r\n          onChange={(value) => changeNumberOfWords(value)}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <Text>words</Text>\r\n        {promptModeError && <p>{promptModeError.errorMessage}</p>}\r\n      </HStack>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styles from '../writing-modes.module.scss';\r\nimport {\r\n  HStack,\r\n  NumberDecrementStepper,\r\n  NumberIncrementStepper,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport { TimeLimitContext } from '../../../contexts/TimeLimitContext';\r\n\r\nexport function TimeLimitMode() {\r\n  const { timeLimitNumberInputRef, isCountdownActive, count } = useContext(\r\n    TimeLimitContext\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <HStack spacing=\"10px\">\r\n        <NumberInput\r\n          className={styles['number-input']}\r\n          allowMouseWheel\r\n          size=\"lg\"\r\n          maxW=\"5rem\"\r\n          min={0}\r\n          defaultValue={0}\r\n          isDisabled={isCountdownActive}\r\n        >\r\n          <NumberInputField ref={timeLimitNumberInputRef} />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <Text>minutes</Text>\r\n      </HStack>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styles from '../writing-modes.module.scss';\r\nimport {\r\n  HStack,\r\n  NumberDecrementStepper,\r\n  NumberIncrementStepper,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport { ModeContext } from '../../../contexts/ModeContext';\r\n\r\nexport function WordCountMode() {\r\n  const { numberInputRef, wordCountGoal } = useContext(ModeContext);\r\n\r\n  return (\r\n    <>\r\n      <HStack>\r\n        <NumberInput\r\n          className={styles['number-input']}\r\n          allowMouseWheel\r\n          size=\"md\"\r\n          min={0}\r\n          ref={numberInputRef}\r\n          defaultValue={wordCountGoal}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <Text>words</Text>\r\n      </HStack>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styles from '../mode-menu.module.scss';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Divider,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text\r\n} from '@chakra-ui/react';\r\nimport { ModeContext } from '../../../contexts/ModeContext';\r\nimport { TimeLimitContext } from '../../../contexts/TimeLimitContext';\r\nimport { PromptMode } from '../../WritingModes/PromptMode/index';\r\nimport { TimeLimitMode } from '../../WritingModes/TimeLimitMode/index';\r\nimport { WordCountMode } from '../../WritingModes/WordCountMode/index';\r\n\r\nexport function ModeModal({ isOpen, onClose, mode, quillEditor }) {\r\n  const {\r\n    modeDispatch,\r\n    toggledSwitches,\r\n    numberInputRef,\r\n    getWords\r\n  } = useContext(ModeContext);\r\n  const { activateCountdown } = useContext(TimeLimitContext);\r\n\r\n  function handleModalCancel(mode) {\r\n    onClose();\r\n\r\n    if (toggledSwitches.includes(mode)) {\r\n      const newToggledSwitches = toggledSwitches.filter(\r\n        (toggledSwitch) => toggledSwitch !== mode\r\n      );\r\n\r\n      modeDispatch({\r\n        type: 'toggledSwitches',\r\n        payload: newToggledSwitches\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isCentered\r\n        closeOnOverlayClick={false}\r\n        motionPreset=\"slideInBottom\"\r\n        size=\"xs\"\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onEsc={() => handleModalCancel(mode)}\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader pb=\"0.5rem\">\r\n            {mode === 'timeLimitMode' && 'Time Limit Mode'}\r\n            {mode === 'wordCountMode' && 'Word Count Mode'}\r\n            {mode === 'promptMode' && 'Random Words Mode'}\r\n          </ModalHeader>\r\n          <Divider style={{ width: '90%', margin: '0 auto' }} />\r\n          <ModalBody pt=\"1rem\" pb=\"1rem\">\r\n            {mode === 'timeLimitMode' && (\r\n              <div>\r\n                <Text m=\"0 auto\">\r\n                  What would you like your time limit to be set to?\r\n                </Text>\r\n                <Center>\r\n                  <Box className={styles['modal-body']}>\r\n                    <TimeLimitMode />\r\n                  </Box>\r\n                </Center>\r\n              </div>\r\n            )}\r\n            {mode === 'wordCountMode' && (\r\n              <div>\r\n                <Text m=\"0 auto\">\r\n                  What would you like your word count goal to be?\r\n                </Text>\r\n                <Box className={styles['modal-body']}>\r\n                  <Center>\r\n                    <WordCountMode quillEditor={quillEditor} />\r\n                  </Center>\r\n                </Box>\r\n              </div>\r\n            )}\r\n            {mode === 'promptMode' && (\r\n              <div>\r\n                <Text m=\"0 auto\">\r\n                  How many words would you like to generate?\r\n                </Text>\r\n                <Box className={styles['modal-body']}>\r\n                  <Center>\r\n                    <PromptMode />\r\n                  </Center>\r\n                </Box>\r\n              </div>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              variant=\"outline\"\r\n              mr={3}\r\n              onClick={() => handleModalCancel(mode)}\r\n            >\r\n              Close\r\n            </Button>\r\n            {mode === 'wordCountMode' && (\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                onClick={() => {\r\n                  onClose();\r\n                  modeDispatch({\r\n                    type: 'wordCountGoal',\r\n                    payload: numberInputRef.current.firstChild.value\r\n                  });\r\n                }}\r\n              >\r\n                Set Word Count\r\n              </Button>\r\n            )}\r\n            {mode === 'promptMode' && (\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                onClick={() => {\r\n                  onClose();\r\n                  getWords();\r\n                }}\r\n              >\r\n                Generate\r\n              </Button>\r\n            )}\r\n            {mode === 'timeLimitMode' && (\r\n              <Button\r\n                colorScheme=\"blue\"\r\n                onClick={() => {\r\n                  onClose();\r\n                  activateCountdown();\r\n                }}\r\n              >\r\n                Set Timer\r\n              </Button>\r\n            )}\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styles from './mode-menu.module.scss';\r\nimport { Button, Menu, MenuButton, MenuList } from '@chakra-ui/react';\r\nimport { MdChevronRight, MdExpandMore } from 'react-icons/md';\r\nimport { ModeContext } from '../../contexts/ModeContext';\r\nimport { ModeMenuItem } from './ModeMenuItem/ModeMenuItem.js';\r\nimport { ModeModal } from './ModeModal/ModeModal.js';\r\n\r\nexport function DropdownModeMenu() {\r\n  const { mode, isOpen, onOpen, onClose } = useContext(ModeContext);\r\n  const isModalOpen = isOpen;\r\n\r\n  return (\r\n    <>\r\n      <Menu closeOnSelect={false} closeOnBlur={isModalOpen ? false : true}>\r\n        {({ isOpen }) => (\r\n          <>\r\n            <MenuButton\r\n              as={Button}\r\n              isActive={isOpen}\r\n              variant=\"outline\"\r\n              rightIcon={isOpen ? <MdExpandMore /> : <MdChevronRight />}\r\n              className={styles['dropdown-menu']}\r\n            >\r\n              Modes\r\n            </MenuButton>\r\n            <MenuList>\r\n              <div>\r\n                <ModeMenuItem\r\n                  currentMode=\"timeLimitMode\"\r\n                  onOpen={onOpen}\r\n                  text=\"Time Limit Mode\"\r\n                />\r\n\r\n                <ModeMenuItem\r\n                  currentMode=\"wordCountMode\"\r\n                  onOpen={onOpen}\r\n                  text=\"Word Count Mode\"\r\n                />\r\n\r\n                <ModeMenuItem\r\n                  currentMode=\"promptMode\"\r\n                  onOpen={onOpen}\r\n                  text=\"Prompt Mode\"\r\n                />\r\n              </div>\r\n            </MenuList>\r\n          </>\r\n        )}\r\n      </Menu>\r\n      <ModeModal mode={mode} isOpen={isOpen} onClose={onClose} />\r\n    </>\r\n  );\r\n}\r\n","import styles from '../header.module.scss';\r\nimport { Flex, Box, Button, HStack, IconButton } from '@chakra-ui/react';\r\n\r\nimport { BsThreeDots } from 'react-icons/bs';\r\nimport { MdChevronLeft } from 'react-icons/md';\r\nimport { IoIosSave } from 'react-icons/io';\r\n\r\nimport { OptionsMenu } from '../../OptionsMenu';\r\nimport { DropdownModeMenu } from '../../ModeMenu';\r\n\r\nexport function CreateNewHeader({ ...props }) {\r\n  const {\r\n    words,\r\n    mode,\r\n    handleTimeLimitMode,\r\n    timeLimitMode,\r\n    wordCountMode,\r\n    promptMode,\r\n    wordCount,\r\n    wordCountGoal,\r\n    quillEditor,\r\n    modeDispatch,\r\n    updatePostLoading,\r\n    onSaveClick,\r\n    onBackBtnClick,\r\n    onAlertClick\r\n  } = props;\r\n\r\n  return (\r\n    <Flex className={styles['create-new']}>\r\n      <div className={styles['left-header']}>\r\n        <Box cursor=\"pointer\" onClick={onBackBtnClick}>\r\n          <MdChevronLeft className={styles['editor-left-chevron']} />\r\n        </Box>\r\n\r\n        <Button\r\n          aria-label=\"Save Post\"\r\n          className={styles['save-btn']}\r\n          size=\"md\"\r\n          variant=\"outline\"\r\n          isLoading={updatePostLoading}\r\n          loadingText=\"Saving...\"\r\n          onClick={onSaveClick}\r\n        >\r\n          Save\r\n        </Button>\r\n        <IconButton\r\n          aria-label=\"Save Post\"\r\n          isRound\r\n          isLoading={updatePostLoading}\r\n          variant=\"outline\"\r\n          size=\"lg\"\r\n          icon={<IoIosSave className={styles['save-icon']} />}\r\n          onClick={onSaveClick}\r\n          className={styles['save-btn-mobile']}\r\n        />\r\n      </div>\r\n\r\n      {words.length > 0 && (\r\n        <>\r\n          <Box className={styles['words-container']} alignSelf=\"center\">\r\n            <HStack alignSelf=\"center\" className={styles['words-list']}>\r\n              {words.map((word, index) => (\r\n                <div key={index} className={styles['word-tag']}>\r\n                  {' '}\r\n                  {word}{' '}\r\n                </div>\r\n              ))}\r\n            </HStack>\r\n          </Box>\r\n        </>\r\n      )}\r\n\r\n      <div className={styles['right-header']}>\r\n        <DropdownModeMenu\r\n          mode={mode}\r\n          handleTimeLimitMode={handleTimeLimitMode}\r\n          timeLimitMode={timeLimitMode}\r\n          wordCountMode={wordCountMode}\r\n          promptMode={promptMode}\r\n          wordCount={wordCount}\r\n          wordCountGoal={wordCountGoal}\r\n          modeDispatch={modeDispatch}\r\n          quillEditor={quillEditor}\r\n        />\r\n\r\n        <OptionsMenu\r\n          menuIcon={<BsThreeDots className={styles['menu-icon']} />}\r\n          onAlertClick={onAlertClick}\r\n        />\r\n      </div>\r\n    </Flex>\r\n  );\r\n}\r\n","import styles from './text-editor.module.scss';\r\nimport { Editable, EditableInput, EditablePreview } from '@chakra-ui/react';\r\nimport ReactQuill from 'react-quill';\r\n\r\nexport function TextEditor(props) {\r\n  const { quillEditorRef, getWordCount, postTitle, currentPost } = props;\r\n  return (\r\n    <>\r\n      <Editable\r\n        ref={postTitle}\r\n        className={styles['post-title']}\r\n        defaultValue={currentPost ? currentPost.title : 'Untitled'}\r\n      >\r\n        <EditablePreview />\r\n        <EditableInput />\r\n      </Editable>\r\n      <ReactQuill\r\n        scrollingContainer=\"html\"\r\n        onKeyUp={getWordCount}\r\n        ref={quillEditorRef}\r\n        theme=\"bubble\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const CREATE_POST = gql`\r\n  mutation($title: String!) {\r\n    createPost(title: $title) {\r\n      _id\r\n      title\r\n      dateCreated\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_POST = gql`\r\n  mutation(\r\n    $id: ID!\r\n    $title: String\r\n    $deltaContent: String\r\n    $textContent: String\r\n  ) {\r\n    updatePost(\r\n      id: $id\r\n      postInput: {\r\n        title: $title\r\n        textContent: $textContent\r\n        deltaContent: $deltaContent\r\n      }\r\n    ) {\r\n      _id\r\n      title\r\n      dateCreated\r\n      dateModified\r\n      deltaContent\r\n      textContent\r\n      author {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_POST = gql`\r\n  query($id: ID!) {\r\n    getPostById(id: $id) {\r\n      ... on NewPost {\r\n        _id\r\n        title\r\n        dateCreated\r\n      }\r\n      ... on ExistingPost {\r\n        _id\r\n        title\r\n        dateCreated\r\n        deltaContent\r\n        textContent\r\n        dateModified\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_POSTS = gql`\r\n  query {\r\n    posts {\r\n      ... on NewPost {\r\n        _id\r\n        title\r\n        dateCreated\r\n        author {\r\n          _id\r\n        }\r\n      }\r\n      ... on ExistingPost {\r\n        _id\r\n        title\r\n        dateCreated\r\n        dateModified\r\n        deltaContent\r\n        textContent\r\n        author {\r\n          _id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_POST = gql`\r\n  mutation($id: ID!) {\r\n    deletePost(id: $id) {\r\n      ... on NewPost {\r\n        _id\r\n        title\r\n        dateCreated\r\n        author {\r\n          _id\r\n        }\r\n      }\r\n      ... on ExistingPost {\r\n        _id\r\n        title\r\n        dateCreated\r\n        dateModified\r\n        deltaContent\r\n        textContent\r\n        author {\r\n          _id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Center, Spinner } from '@chakra-ui/react';\r\n\r\nexport function Loading() {\r\n  return (\r\n    <>\r\n      <Center mt=\"50vh\">\r\n        <Spinner thickness=\"4px\" speed=\"0.65s\" color=\"#9e9e9e\" size=\"xl\" />\r\n      </Center>\r\n    </>\r\n  );\r\n}\r\n","import { useMutation, useQuery } from '@apollo/client';\r\nimport {\r\n  CircularProgress,\r\n  CircularProgressLabel,\r\n  createStandaloneToast,\r\n  Progress,\r\n  useBreakpointValue,\r\n  useToast\r\n} from '@chakra-ui/react';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport 'react-quill/dist/quill.bubble.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\r\nimport { AlertDialog } from '../../components/AlertDialog/index.js';\r\nimport { CreateNewHeader } from '../../components/Header/CreateNewHeader/index.js';\r\nimport { TextEditor } from '../../components/TextEditor';\r\nimport { ModeContext } from '../../contexts/ModeContext';\r\nimport { OptionsMenuContext } from '../../contexts/OptionsMenuContext';\r\nimport { TimeLimitContext } from '../../contexts/TimeLimitContext';\r\nimport { DELETE_POST, GET_POST, UPDATE_POST } from '../../gql.js';\r\nimport { Loading } from '../Loading/index.js';\r\nimport styles from './create-new.module.scss';\r\n\r\nexport function CreateNew() {\r\n  let quillEditor = useRef(null);\r\n  let postTitle = useRef(null);\r\n\r\n  const { timeLimit, count } = useContext(TimeLimitContext);\r\n  const {\r\n    mode,\r\n    isOpen,\r\n    wordCountGoal,\r\n    wordCount,\r\n    timeLimitMode,\r\n    wordCountMode,\r\n    promptMode,\r\n    words,\r\n    modeDispatch,\r\n    toggledSwitches,\r\n    initialState\r\n  } = useContext(ModeContext);\r\n  const {\r\n    isDeleteAlertOpen,\r\n    setIsDeleteAlertOpen,\r\n    closeDeleteAlert,\r\n    deleteAlertRef,\r\n    deletePostErrorT\r\n  } = useContext(OptionsMenuContext);\r\n\r\n  const isModalOpen = isOpen;\r\n  const timesUpToast = useToast();\r\n  const postLengthErrorToast = useToast();\r\n\r\n  const { id } = useParams();\r\n  const [currentPostId] = useState(id);\r\n  const [currentPost, setCurrentPost] = useState(null);\r\n  const [redirectToHome, setRedirectToHome] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let history = useHistory();\r\n\r\n  const sizes = useBreakpointValue({ base: '4rem', md: '5rem' });\r\n\r\n  const [\r\n    updatePost,\r\n    { error: updatePostError, loading: updatePostLoading }\r\n  ] = useMutation(UPDATE_POST, {\r\n    onCompleted: () => {\r\n      updatePostSuccessToast({\r\n        title: 'Post saved!',\r\n        status: 'success',\r\n        duration: 2000,\r\n        isClosable: true\r\n      });\r\n    }\r\n  });\r\n\r\n  // retrieves post by the :id variable in the current url\r\n  const { error: currentPostError } = useQuery(GET_POST, {\r\n    variables: { id: currentPostId },\r\n    onCompleted: (GET_POST) => {\r\n      setCurrentPost({ ...GET_POST.getPostById });\r\n      setLoading(false);\r\n    },\r\n    fetchPolicy: 'network-only'\r\n  });\r\n\r\n  const [deletePost, { error: deletePostError }] = useMutation(DELETE_POST, {\r\n    variables: { id: currentPostId },\r\n    onCompleted: () => {\r\n      setRedirectToHome(true);\r\n    }\r\n  });\r\n\r\n  // load the contents of the retrieved post into the text editor\r\n  useEffect(() => {\r\n    if (currentPost && currentPost.deltaContent) {\r\n      let deltaContent = JSON.parse(currentPost.deltaContent);\r\n      quillEditor.current.editor.setContents(deltaContent.ops);\r\n    }\r\n  }, [currentPost]);\r\n\r\n  // resets writing modes' states before unmounting\r\n  useEffect(() => {\r\n    return () => {\r\n      for (const [key, value] of Object.entries(initialState)) {\r\n        modeDispatch({ type: `${key}`, payload: `${value}` });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (count === 0) {\r\n      timesUpToast({\r\n        title: 'Time is up!',\r\n        duration: 5000,\r\n        status: 'info',\r\n        isClosable: true\r\n      });\r\n    }\r\n  }, [count]);\r\n\r\n  function handleSave() {\r\n    let textContents = quillEditor.current.editor.getText();\r\n    let deltaContents = quillEditor.current.editor.getContents();\r\n    let title = postTitle.current.children[1].value;\r\n\r\n    if (textContents.length > 20000) {\r\n      return postLengthErrorToast({\r\n        title: 'An error has occured.',\r\n        description:\r\n          'Note is too long. The maximum note length is 20,000 characters.',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true\r\n      });\r\n    }\r\n\r\n    updatePost({\r\n      variables: {\r\n        id: currentPostId,\r\n        title: title,\r\n        deltaContent: JSON.stringify(deltaContents),\r\n        textContent: textContents\r\n      }\r\n    });\r\n\r\n    if (updatePostError) {\r\n      updatePostErrorToast({\r\n        title: 'An error has occured.',\r\n        description: 'There was an issue saving your note. Please try again.',\r\n        status: 'error',\r\n        duration: 5000,\r\n        isClosable: true\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDelete() {\r\n    deletePost({\r\n      variables: {\r\n        id: currentPostId\r\n      }\r\n    });\r\n\r\n    closeDeleteAlert();\r\n\r\n    if (deletePostError) {\r\n      deletePostErrorT();\r\n    }\r\n  }\r\n\r\n  function goBack() {\r\n    history.push('/dashboard');\r\n    // todo: input code that resets the ModeContext states\r\n  }\r\n\r\n  function handleTimeLimitMode() {\r\n    modeDispatch({ type: 'timeLimitMode', payload: !timeLimitMode });\r\n  }\r\n\r\n  function getWordCount() {\r\n    let quillTextArea = quillEditor.current.getEditor().getText();\r\n    let words = quillTextArea.match(/\\b[-?(\\w+)?]+\\b/gi);\r\n\r\n    if (words) {\r\n      modeDispatch({ type: 'wordCount', payload: words.length });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {(redirectToHome || currentPostError) && (\r\n        <Redirect push to=\"/dashboard\" />\r\n      )}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className={styles['wrapper']}>\r\n          <CreateNewHeader\r\n            words={words}\r\n            mode={mode}\r\n            handleTimeLimitMode={handleTimeLimitMode}\r\n            timeLimitMode={timeLimitMode}\r\n            wordCountMode={wordCountMode}\r\n            promptMode={promptMode}\r\n            wordCount={wordCount}\r\n            wordCountGoal={wordCountGoal}\r\n            quillEditor={quillEditor}\r\n            modeDispatch={modeDispatch}\r\n            quillEditor={quillEditor}\r\n            updatePostLoading={updatePostLoading}\r\n            onSaveClick={() => handleSave()}\r\n            onBackBtnClick={() => goBack()}\r\n            onAlertClick={() => setIsDeleteAlertOpen(true)}\r\n          />\r\n\r\n          {/* DELETE POST CONFIRMATION MODAL */}\r\n\r\n          <AlertDialog\r\n            isOpen={isDeleteAlertOpen}\r\n            leastDestructiveRef={deleteAlertRef}\r\n            onClose={closeDeleteAlert}\r\n            isCentered\r\n            deleteAlertRef={deleteAlertRef}\r\n            closeDeleteAlert={() => closeDeleteAlert()}\r\n            handleDelete={() => handleDelete()}\r\n          />\r\n\r\n          {/* WORDCOUNT PROGRESS BAR */}\r\n\r\n          {wordCountGoal && (\r\n            <Progress\r\n              value={wordCount}\r\n              max={wordCountGoal}\r\n              colorScheme={wordCount <= wordCountGoal ? 'blue' : 'green'}\r\n              className={styles['word-count-progress-bar']}\r\n            />\r\n          )}\r\n          {wordCountGoal && (\r\n            <p\r\n              className={styles['word-count']}\r\n            >{`${wordCount}/${wordCountGoal} words`}</p>\r\n          )}\r\n\r\n          {/* TEXT EDITOR */}\r\n\r\n          <div className={styles['editor-container']}>\r\n            <TextEditor\r\n              currentPost={currentPost}\r\n              postTitle={postTitle}\r\n              getWordCount={() => getWordCount()}\r\n              quillEditorRef={quillEditor}\r\n            />\r\n          </div>\r\n\r\n          {/* TIMELIMITMODE PROGRESS CIRCLE */}\r\n\r\n          {toggledSwitches.includes('timeLimitMode') && !isModalOpen && (\r\n            <CircularProgress\r\n              value={count && count !== NaN ? count : 0}\r\n              min={0}\r\n              max={timeLimit && timeLimit !== 0 ? timeLimit : 1}\r\n              size={sizes}\r\n              color=\"green.400\"\r\n              className={styles['time-limit-circle']}\r\n            >\r\n              <CircularProgressLabel />\r\n            </CircularProgress>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst updatePostSuccessToast = createStandaloneToast();\r\nconst updatePostErrorToast = createStandaloneToast();\r\n","import React, { createContext, useState, useRef } from 'react';\r\n\r\nexport const SearchContext = createContext({});\r\n\r\nexport function SearchProvider(props) {\r\n  const searchBar = useRef();\r\n  const [searchInput, setSearchInput] = useState(null);\r\n  const [searchBarFocused, setSearchBarFocused] = useState(false);\r\n\r\n  return (\r\n    <SearchContext.Provider\r\n      value={{\r\n        searchBar: searchBar,\r\n        searchInput: searchInput,\r\n        setSearchInput: setSearchInput,\r\n        searchBarFocused: searchBarFocused,\r\n        setSearchBarFocused: setSearchBarFocused\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SearchContext.Provider>\r\n  );\r\n}\r\n","import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const UserContext = createContext({});\r\n\r\nexport function UserProvider(props) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(!user);\r\n\r\n  useEffect(() => {\r\n    setLoading(user === null ? true : false);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://writeon-app.herokuapp.com/current', {\r\n      credentials: 'include'\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setUser(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user: user,\r\n        setUser: setUser,\r\n        loading: loading\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n","import React, { createContext, useState } from 'react';\r\n\r\nexport const NewPostContext = createContext({});\r\n\r\nexport function NewPostProvider(props) {\r\n  const [newPost, setNewPost] = useState(null);\r\n\r\n  return (\r\n    <NewPostContext.Provider\r\n      value={{\r\n        newPost: newPost,\r\n        setNewPost: setNewPost\r\n      }}\r\n    >\r\n      {props.children}\r\n    </NewPostContext.Provider>\r\n  );\r\n}\r\n","import styles from './header.module.scss';\r\nimport { Flex } from '@chakra-ui/react';\r\n\r\nexport function Header({ children, classname }) {\r\n  return (\r\n    <Flex className={classname ? classname : styles['header']}>{children}</Flex>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/writeon.052763fe.svg\";","import React, { useContext, useRef, useState } from 'react';\r\nimport styles from './layout.module.scss';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  createStandaloneToast,\r\n  Divider,\r\n  IconButton,\r\n  Input,\r\n  InputGroup,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuItemOption,\r\n  MenuGroup,\r\n  MenuOptionGroup,\r\n  MenuIcon,\r\n  MenuCommand,\r\n  MenuDivider,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Spinner,\r\n  useDisclosure,\r\n  useToast\r\n} from '@chakra-ui/react';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\nimport { generatePath } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { NewPostContext } from './contexts/NewPostContext';\r\nimport { SearchContext } from './contexts/SearchContext';\r\nimport { Header } from './components/Header';\r\nimport writeOn from './components/Header/writeon.svg';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_POST } from './gql.js';\r\n\r\nexport function Layout({ children }) {\r\n  const [redirectToLogout, setRedirectToLogout] = useState(false);\r\n  const { setNewPost } = useContext(NewPostContext);\r\n  const { setSearchInput, setSearchBarFocused } = useContext(SearchContext);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const postTitleInput = useRef();\r\n  const [\r\n    createPost,\r\n    { error: createPostError, loading, data, called }\r\n  ] = useMutation(CREATE_POST, {\r\n    onCompleted: (createPost) => {\r\n      onClose();\r\n      setNewPost({ id: createPost.createPost._id });\r\n    }\r\n  });\r\n\r\n  async function createNewPost() {\r\n    //todo: throw in an OnChange. if title length is < x, disable the button. but once long enough, enable the \"Create note\" button\r\n    const newTitle = postTitleInput.current.value.toString();\r\n    \r\n    createPost({ variables: { title: newTitle } });\r\n  }\r\n\r\n  function handleInput(e) {\r\n    setSearchInput(e.target.value);\r\n  }\r\n\r\n  //todo: change the localhost 3000 link here and everywhere else in the code\r\n\r\n  return (\r\n    <>\r\n      {called && data && (\r\n        <Redirect\r\n          push\r\n          to={generatePath('/write/:id', {\r\n            id: data.createPost._id\r\n          })}\r\n        />\r\n      )}\r\n      {redirectToLogout && <Redirect push to=\"/logout\" />}\r\n      <Header className={styles['header']}>\r\n        <Box as=\"a\" href=\"https://writeon-app.herokuapp.com/\" className=\"logo\">\r\n          <img src={writeOn} className={styles['writeon']} />\r\n        </Box>\r\n        <InputGroup width=\"50%\">\r\n          <Input\r\n            placeholder=\"Search\"\r\n            bg=\"#efefef\"\r\n            border=\"none\"\r\n            width=\"100%\"\r\n            maxW=\"1000px\"\r\n            m=\"0 auto\"\r\n            size=\"lg\"\r\n            onChange={(e) => handleInput(e)}\r\n            onFocus={() => setSearchBarFocused(true)}\r\n            onBlur={() => setSearchBarFocused(false)}\r\n            _focus={{\r\n              backgroundColor: '#ffffff',\r\n              shadow: 'xs'\r\n            }}\r\n          />\r\n        </InputGroup>\r\n        <Box>\r\n          <button\r\n            aria-label=\"Create Note\"\r\n            onClick={onOpen}\r\n            className={styles['create-new-btn']}\r\n          >\r\n            Create Note\r\n          </button>\r\n          <Menu>\r\n            <MenuButton\r\n              as={IconButton}\r\n              variant=\"unstyled\"\r\n              icon={<BsThreeDots />}\r\n              className={styles['header-menu-btn']}\r\n            >\r\n              Actions\r\n            </MenuButton>\r\n            <MenuList>\r\n              <MenuItem onClick={() => settToLogout(true)}>\r\n                Log out\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </Box>\r\n      </Header>\r\n      <div className={styles['container']}>{children}</div>\r\n\r\n      <Modal\r\n        size=\"sm\"\r\n        initialFocusRef={postTitleInput}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        isCentered\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create New Note</ModalHeader>\r\n          <Divider style={{ width: '90%', margin: '0 auto' }} />\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <div style={{ marginTop: '1rem' }}>\r\n              {!loading ? (\r\n                <div>\r\n                  <p>Title</p>\r\n                  <Input ref={postTitleInput} size=\"lg\" />\r\n\r\n                  {createPostError && (\r\n                    <p className={styles['modal-error']}>\r\n                      There was an error creating your note. Please try again.\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <Center>\r\n                  <Spinner\r\n                    thickness=\"4px\"\r\n                    speed=\"0.65s\"\r\n                    color=\"#9e9e9e\"\r\n                    size=\"xl\"\r\n                  />\r\n                </Center>\r\n              )}\r\n            </div>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button onClick={() => createNewPost()} colorScheme=\"blue\">\r\n              Create Note\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function CreateNewLayout(props) {\r\n  return (\r\n    <>\r\n      <div className={styles[\"wrapper\"]}>{props.children}</div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport styles from './note-card.module.scss';\r\nimport { Box } from '@chakra-ui/react';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { generatePath } from 'react-router';\r\nimport Truncate from 'react-truncate';\r\nimport { OptionsMenu } from '../OptionsMenu';\r\n\r\nexport function NoteCard({\r\n  title,\r\n  textContent,\r\n  _id,\r\n  gridView,\r\n  setClickedPostId\r\n}) {\r\n  const [redirectToPost, setRedirectToPost] = useState(false);\r\n\r\n  function handlePostClick() {\r\n    setRedirectToPost(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {redirectToPost && (\r\n        <Redirect\r\n          push\r\n          to={generatePath('/write/:id', {\r\n            id: _id\r\n          })}\r\n        />\r\n      )}\r\n      <Box className={'notecard'} onClick={(e) => handlePostClick()}>\r\n        <div className={styles['home-note-menu-container']}>\r\n          <OptionsMenu\r\n            menuIcon={<BsThreeDots className={styles['menu-icon']} />}\r\n            menuButton={'menu-icon-two'}\r\n            _id={_id}\r\n            setClickedPostId={() => setClickedPostId(_id)}\r\n          />\r\n        </div>\r\n\r\n        <Box as=\"h2\" className={styles['title']}>\r\n          {title}\r\n        </Box>\r\n        <Box className={styles['content']}>\r\n          <Truncate lines={gridView ? 7 : 4} width={gridView ? 0 : 600}>\r\n            {textContent}\r\n          </Truncate>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Box } from '@chakra-ui/react';\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { SearchContext } from '../../contexts/SearchContext';\r\nimport { NoteCard } from '../../components/NoteCard';\r\n\r\nexport function SearchResults({ posts, gridView }) {\r\n  const { searchInput } = useContext(SearchContext);\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    function filterSearch() {\r\n      if (posts && searchInput && searchInput.length > 2) {\r\n        let matches = posts.filter((post) => {\r\n          const regex = new RegExp(`${searchInput}`, 'gi');\r\n          return post.title.match(regex) || post?.textContent?.match(regex);\r\n        });\r\n\r\n        setResults(matches);\r\n      }\r\n    }\r\n\r\n    filterSearch();\r\n  }, [searchInput, posts]);\r\n\r\n  return (\r\n    <>\r\n      <Box className={gridView ? 'grid-view' : 'list-view'}>\r\n        {results &&\r\n          results.map((post) => {\r\n            return (\r\n              <NoteCard\r\n                key={post._id}\r\n                _id={post._id}\r\n                title={post.title}\r\n                textContent={post.textContent && post.textContent}\r\n              />\r\n            );\r\n          })}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styles from './home.module.scss';\r\nimport { Box, Flex, Select } from '@chakra-ui/react';\r\nimport { HiSortAscending, HiSortDescending } from 'react-icons/hi';\r\nimport { MdList } from 'react-icons/md';\r\nimport { RiLayoutGridFill } from 'react-icons/ri';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { OptionsMenuContext } from '../../contexts/OptionsMenuContext';\r\nimport { SearchContext } from '../../contexts/SearchContext';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { Layout } from '../../Layout';\r\nimport { Loading } from '../Loading';\r\nimport { SearchResults } from '../SearchResults';\r\nimport { AlertDialog } from '../../components/AlertDialog';\r\nimport { NoteCard } from '../../components/NoteCard';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { DELETE_POST, GET_ALL_POSTS } from '../../gql';\r\n\r\nexport function Home() {\r\n  const { user } = useContext(UserContext);\r\n  const { searchInput, setSearchInput } = useContext(SearchContext);\r\n  const {\r\n    isDeleteAlertOpen,\r\n    deleteAlertRef,\r\n    closeDeleteAlert,\r\n    deletePostErrorT\r\n  } = useContext(OptionsMenuContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [posts, setPosts] = useState(null);\r\n  const [gridView, setGridView] = useState(true);\r\n  const [sortBy, setSortBy] = useState('dateModified');\r\n  const [sortOrder, setSortOrder] = useState('ascending');\r\n  const [clickedPostId, setClickedPostId] = useState();\r\n\r\n  const { called: getPostsCalled, refetch: refetchAllPosts } = useQuery(\r\n    GET_ALL_POSTS,\r\n    {\r\n      onCompleted: (GET_ALL_POSTS) => {\r\n        setPosts(GET_ALL_POSTS.posts);\r\n        setLoading(false);\r\n      },\r\n      fetchPolicy: 'network-only',\r\n      notifyOnNetworkStatusChange: true\r\n    }\r\n  );\r\n\r\n  const [deletePost, { error: deletePostError }] = useMutation(DELETE_POST, {\r\n    variables: { id: clickedPostId }\r\n  });\r\n\r\n  function sortPosts(a, b, property) {\r\n    if (property === 'title') {\r\n      let firstElem = a.title.toUpperCase();\r\n      let secondElem = b.title.toUpperCase();\r\n\r\n      if (firstElem < secondElem) {\r\n        return sortOrder === 'ascending' ? -1 : 1;\r\n      }\r\n\r\n      if (firstElem > secondElem) {\r\n        return sortOrder === 'ascending' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    } else {\r\n      let date1 = new Date(a[property]);\r\n      let date2 = new Date(b[property]);\r\n      return sortOrder === 'ascending' ? date1 - date2 : date2 - date1;\r\n    }\r\n  }\r\n\r\n  async function handleDelete() {\r\n    await deletePost({\r\n      variables: {\r\n        id: clickedPostId\r\n      }\r\n    });\r\n\r\n    closeDeleteAlert();\r\n\r\n    if (deletePostError) {\r\n      deletePostErrorT();\r\n    }\r\n\r\n    refetchAllPosts();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push('/login');\r\n    }\r\n  }, [user]);\r\n\r\n  // when Home component unmounts, reset the search bar\r\n  useEffect(() => {\r\n    return () => {\r\n      setSearchInput('');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (posts) {\r\n      switch (sortBy) {\r\n        case 'title':\r\n          let sortedTitles = posts\r\n            .slice()\r\n            .sort((a, b) => sortPosts(a, b, 'title'));\r\n\r\n          setPosts(sortedTitles);\r\n          break;\r\n        case 'dateCreated':\r\n          let sortedCreatedDates = posts\r\n            .slice()\r\n            .sort((a, b) => sortPosts(a, b, 'dateCreated'));\r\n          setPosts(sortedCreatedDates);\r\n          break;\r\n        case 'dateModified':\r\n          let sortedModifiedDates = posts\r\n            .slice()\r\n            .sort((a, b) => sortPosts(a, b, 'dateModified'));\r\n          setPosts(sortedModifiedDates);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [sortBy, sortOrder]);\r\n\r\n  return (\r\n    <>\r\n      {loading || posts === null ? (\r\n        <Loading />\r\n      ) : (\r\n        <Layout>\r\n          <Box>\r\n            <AlertDialog\r\n              isOpen={isDeleteAlertOpen}\r\n              leastDestructiveRef={deleteAlertRef}\r\n              onClose={closeDeleteAlert}\r\n              isCentered\r\n              deleteAlertRef={deleteAlertRef}\r\n              closeDeleteAlert={() => closeDeleteAlert()}\r\n              handleDelete={() => handleDelete()}\r\n            />\r\n\r\n            <Flex\r\n              mb=\"1rem\"\r\n              justifyContent=\"flex-end\"\r\n              className={styles['view-menu']}\r\n            >\r\n              <Select\r\n                width=\"180px\"\r\n                justifySelf=\"end\"\r\n                mr=\"1rem\"\r\n                onChange={(e) => setSortBy(e.target.value)}\r\n              >\r\n                <option value=\"dateModified\">Date Last Edited</option>\r\n                <option value=\"title\">Title</option>\r\n                <option value=\"dateCreated\">Date Created</option>\r\n              </Select>\r\n              <Box\r\n                onClick={\r\n                  sortOrder === 'ascending'\r\n                    ? () => setSortOrder('descending')\r\n                    : () => setSortOrder('ascending')\r\n                }\r\n              >\r\n                {sortOrder === 'ascending' ? (\r\n                  <HiSortAscending\r\n                    aria-label=\"Ascending\"\r\n                    title=\"Ascending\"\r\n                    className={styles['ascending-icon']}\r\n                  />\r\n                ) : (\r\n                  <HiSortDescending\r\n                    aria-label=\"Descending\"\r\n                    title=\"Descending\"\r\n                    className={styles['ascending-icon']}\r\n                  />\r\n                )}\r\n              </Box>\r\n              <Box>\r\n                {gridView ? (\r\n                  <MdList\r\n                    aria-label=\"List view\"\r\n                    title=\"List view\"\r\n                    onClick={() => setGridView(!gridView)}\r\n                    className={styles['list-view-icon']}\r\n                  />\r\n                ) : (\r\n                  <RiLayoutGridFill\r\n                    aria-label=\"Grid view\"\r\n                    title=\"Grid view\"\r\n                    onClick={() => setGridView(!gridView)}\r\n                    className={styles['grid-view-icon']}\r\n                  />\r\n                )}\r\n              </Box>\r\n            </Flex>\r\n            {searchInput && searchInput.length > 2 ? (\r\n              <SearchResults posts={posts} gridView={gridView} />\r\n            ) : (\r\n              <Box className={gridView ? 'grid-view' : 'list-view'}>\r\n                {posts &&\r\n                  posts.map((post) => {\r\n                    return (\r\n                      <NoteCard\r\n                        key={post._id}\r\n                        _id={post._id}\r\n                        title={post.title}\r\n                        textContent={post.textContent && post.textContent}\r\n                        gridView={gridView}\r\n                        setClickedPostId={setClickedPostId}\r\n                      />\r\n                    );\r\n                  })}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Layout>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport styles from './login.module.scss';\r\nimport { Box, Center, Input } from '@chakra-ui/react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { UserContext } from '../../contexts/UserContext';\r\n\r\nexport function Login() {\r\n  const { user } = useContext(UserContext);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <Redirect push to=\"/dashboard\" />\r\n      ) : (\r\n        <Center className={styles['wrapper']}>\r\n          <Box m=\"3rem\" className={styles['login']}>\r\n            <div>\r\n              <Center>\r\n                <a href=\"#\" className={styles['write-on']}>\r\n                  WriteOn\r\n                </a>\r\n              </Center>\r\n              <form\r\n                action=\"https://writeon-app.herokuapp.com/login\"\r\n                method=\"POST\"\r\n                className={styles['form']}\r\n              >\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value=\"username\"\r\n                  mb=\"3\"\r\n                  size=\"lg\"\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  value=\"password\"\r\n                  name=\"password\"\r\n                  size=\"lg\"\r\n                />\r\n                <button type=\"submit\" className={styles['login-btn']}>\r\n                  Login\r\n                </button>\r\n                <div className={styles['or']}>\r\n                  <div className={styles['line']}></div>\r\n                  <span>or</span>\r\n                  <div className={styles['line']}></div>\r\n                </div>\r\n                <button className={styles['signup-btn']}>\r\n                  Sign Up (Coming Soon!)\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </Box>\r\n        </Center>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Box, Button, Center, Heading } from '@chakra-ui/react';\r\n\r\nexport function NotFound() {\r\n  return (\r\n    <>\r\n      <Center h=\"100vh\">\r\n        <Box>\r\n          <Center>\r\n            <span style={{ fontSize: '3rem' }}>😲</span>\r\n          </Center>\r\n          <Heading size=\"xl\">Page Not Found!</Heading>\r\n          <p>Let's go somewhere else now, shall we?</p>\r\n          <Center>\r\n            <Button bg=\"#000\" color=\"#fff\">\r\n              Home\r\n            </Button>\r\n          </Center>\r\n        </Box>\r\n      </Center>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const ProtectedRoute = ({ component: Component, user, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (user) {\r\n          return <Component {...rest} {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/',\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","export default __webpack_public_path__ + \"static/media/writeon-demo.0106e2be.png\";","export default __webpack_public_path__ + \"static/media/writeon-search-demo.a758b05c.gif\";","export default __webpack_public_path__ + \"static/media/writeon-editor-demo.a6d02842.gif\";","import styles from './landing.module.scss';\r\nimport writeOnDemo from './writeon-demo.png';\r\nimport searchDemo from './writeon-search-demo.gif';\r\nimport editorDemo from './writeon-editor-demo.gif';\r\n\r\nimport React, { useContext, useState, useLayoutEffect } from 'react';\r\nimport { Box, IconButton, Spacer, Button } from '@chakra-ui/react';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Loading } from '../Loading';\r\nimport { Header } from '../../components/Header';\r\n\r\nimport { HiMenu } from 'react-icons/hi';\r\n\r\nimport writeOn from '../../components/Header/writeon.svg';\r\n\r\nexport function Landing() {\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const [toggleMobileMenu, setToggleMobileMenu] = useState(false);\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  function handleScroll() {\r\n    const position = window.pageYOffset;\r\n    setScrollPosition(position);\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [window.pageYOffset]);\r\n\r\n  return (\r\n    <>\r\n      {user && <Redirect push to=\"/dashboard\" />}\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <Header\r\n            classname={\r\n              scrollPosition > 0 || toggleMobileMenu\r\n                ? 'landing-header'\r\n                : 'landing-header-top'\r\n            }\r\n          >\r\n            <Box\r\n              as=\"a\"\r\n              href=\"https://writeon.ink/\"\r\n              className={styles['writeon-logo']}\r\n            >\r\n              <img src={writeOn} className={styles['writeon-landing']} />\r\n            </Box>\r\n            <Spacer className={styles['header-spacer']} />\r\n            <Box>\r\n              <button className={styles['login']}>\r\n                <a href=\"/login\">Login</a>\r\n              </button>\r\n              <button className={styles['signup']} disabled>\r\n                Sign Up\r\n              </button>\r\n              <button\r\n                className={styles['mobile-menu-icon']}\r\n                onClick={() => setToggleMobileMenu(!toggleMobileMenu)}\r\n              >\r\n                <IconButton\r\n                  icon={<HiMenu />}\r\n                  variant=\"unstyled\"\r\n                  aria-label=\"Mobile menu\"\r\n                />\r\n              </button>\r\n            </Box>\r\n          </Header>\r\n          <div\r\n            className={\r\n              toggleMobileMenu\r\n                ? styles['mobile-menu']\r\n                : styles['mobile-menu-hidden']\r\n            }\r\n          >\r\n            <button className={styles['login-mobile']}>Login</button>\r\n            <button className={styles['signup-mobile']} disabled>\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n          <section className={styles['hero']}>\r\n            <div className={styles['container']}>\r\n              <h1 className={styles['header']}>Unleash Your Creativity</h1>\r\n              <h3 className={styles['subtitle']}>\r\n                Or jot down your thoughts. Whatever works for you.\r\n              </h3>\r\n              <div className={styles['hero-img']}>\r\n                <img src={writeOnDemo} alt=\"WriteOn dashboard\" />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className={styles['features']}>\r\n            <div className={styles['features-container']}>\r\n              <Feature\r\n                heading=\"Seamless Writing Experience\"\r\n                description=\"Format text how you'd like. Insert quotes, links, and create\r\n            headings.\"\r\n                image={editorDemo}\r\n                imageAlt=\"\"\r\n              />\r\n              <Feature\r\n                heading=\"Boost Your Creativity\"\r\n                description=\"Set a word count goal, a time limit, or generate random words for inspiration.\"\r\n                classname={styles['feature-flipped']}\r\n                image=\"/\"\r\n                imageAlt=\"\"\r\n              />\r\n              <Feature\r\n                heading=\"Instantly Find Notes\"\r\n                description=\"Search through all of your notes. Get results as you type.\"\r\n                image={searchDemo}\r\n                imageAlt=\"\"\r\n              />\r\n            </div>\r\n          </section>\r\n          <div className={styles['footer']}>\r\n            <span className={styles['footer-left']}>WriteOn.</span>\r\n            <a href=\"#\" className={styles['footer-right']}>\r\n              Made with 💖\r\n            </a>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Feature({ classname, heading, description, image, imageAlt }) {\r\n  return (\r\n    <>\r\n      <div className={classname ? classname : styles['feature']}>\r\n        <div\r\n          className={\r\n            classname ? styles['feature-flipped-img'] : styles['feature-img']\r\n          }\r\n        >\r\n          <img src={image} alt={imageAlt} />\r\n        </div>\r\n        <div className={styles['text-container']}>\r\n          <h2 className={styles['feature-heading']}>{heading}</h2>\r\n          <p className={styles['feature-description']}>{description}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { UserContext } from '../../contexts/UserContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport function Logout() {\r\n  const { user, setUser, loading } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetch('https://writeon-app.herokuapp.com/logout', { credentials: 'include' });\r\n      setUser(false);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [user]);\r\n\r\n  return <>{<Redirect push to=\"/\" />}</>;\r\n}\r\n","import './styles.scss';\r\n\r\nimport React, { useContext } from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport { CreateNew } from './pages/CreateNew';\r\nimport { Home } from './pages/Home';\r\nimport { Login } from './pages/Login';\r\nimport { NotFound } from './pages/NotFound';\r\nimport { ProtectedRoute } from './ProtectedRoute';\r\nimport { UserContext } from './contexts/UserContext';\r\nimport { Loading } from './pages/Loading';\r\n\r\nimport { OptionsMenuProvider } from './contexts/OptionsMenuContext';\r\nimport { Landing } from './pages/Landing';\r\nimport { Logout } from './pages/Logout';\r\n\r\nexport default function App() {\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/logout\" component={Logout} />\r\n            <OptionsMenuProvider>\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/write/:id\"\r\n                user={user}\r\n                component={CreateNew}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/dashboard\"\r\n                user={user}\r\n                component={Home}\r\n              />\r\n              <Route exact path=\"/\" component={Landing} />\r\n            </OptionsMenuProvider>\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </Router>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'focus-visible/dist/focus-visible';\r\nimport {\r\n  ApolloClient,\r\n  ApolloLink,\r\n  ApolloProvider,\r\n  InMemoryCache,\r\n  createHttpLink\r\n} from '@apollo/client';\r\nimport { onError } from 'apollo-link-error';\r\nimport App from './App';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport { ModeProvider } from './contexts/ModeContext';\r\nimport { SearchProvider } from './contexts/SearchContext';\r\nimport { NewPostProvider } from './contexts/NewPostContext';\r\nimport { TimeLimitProvider } from './contexts/TimeLimitContext';\r\nimport { UserProvider } from './contexts/UserContext';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://writeon-app.herokuapp.com/graphql\",\r\n  credentials: \"include\",\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: ApolloLink.from([httpLink])\r\n});\r\n\r\nexport default function Compose(props) {\r\n  const { components, children } = props;\r\n  return (\r\n    <>\r\n      {components.reduceRight((acc, Comp) => {\r\n        return <Comp>{acc}</Comp>;\r\n      }, children)}\r\n    </>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <ChakraProvider>\r\n      <Compose\r\n        components={[\r\n          UserProvider,\r\n          ModeProvider,\r\n          SearchProvider,\r\n          TimeLimitProvider,\r\n          NewPostProvider,\r\n        ]}\r\n      >\r\n        <App />\r\n      </Compose>\r\n    </ChakraProvider>\r\n  </ApolloProvider>,\r\n  rootElement\r\n);\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__iyus8\",\"create-new\":\"header_create-new__3NfAI\",\"words-container\":\"header_words-container__17kYb\",\"word-tag\":\"header_word-tag__3xwKR\",\"words-list\":\"header_words-list__1an-o\",\"save-btn\":\"header_save-btn__WTIPR\",\"save-icon\":\"header_save-icon__1VJHC\",\"save-btn-mobile\":\"header_save-btn-mobile__37UKL\",\"left-header\":\"header_left-header__s5Fpv\",\"right-header\":\"header_right-header__Xioca\",\"editor-left-chevron\":\"header_editor-left-chevron__iBbSJ\",\"menu-icon\":\"header_menu-icon__1LnG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__3Y2lo\",\"login\":\"login_login__TBNXr\",\"form\":\"login_form__2FDKD\",\"button\":\"login_button__16d2T\",\"login-btn\":\"login_login-btn__5xt00\",\"signup-btn\":\"login_signup-btn__33Ut-\",\"write-on\":\"login_write-on__4bIo3\",\"line\":\"login_line__1nSLg\",\"or\":\"login_or__2DTRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-container\":\"mode-menu_toggle-container__13Llz\",\"modal-body\":\"mode-menu_modal-body__Qd_ET\",\"dropdown-menu\":\"mode-menu_dropdown-menu__3YIrd\",\"button-text\":\"mode-menu_button-text__RxgIg\",\"dropdown-menu-mobile\":\"mode-menu_dropdown-menu-mobile__2XfIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout_container__3ffbW\",\"create-new-btn\":\"layout_create-new-btn__1XKYq\",\"header-menu-btn\":\"layout_header-menu-btn__240HA\",\"modal-error\":\"layout_modal-error__3j0rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number-input\":\"writing-modes_number-input__gC_KA\",\"words-list\":\"writing-modes_words-list__2O7SZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"create-new_wrapper__1hU9b\",\"editor-container\":\"create-new_editor-container__2x8lp\",\"time-limit-circle\":\"create-new_time-limit-circle__3VF0K\",\"word-count\":\"create-new_word-count__1XeOl\",\"word-count-progress-bar\":\"create-new_word-count-progress-bar__1dQn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ascending-icon\":\"home_ascending-icon__2G2jR\",\"grid-view-icon\":\"home_grid-view-icon__zXQVS\",\"list-view-icon\":\"home_list-view-icon__3Gibm\",\"view-menu\":\"home_view-menu__3qngf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"note-card_title__Vy4z3\",\"content\":\"note-card_content__1cAbr\",\"menu\":\"note-card_menu__k-0ks\",\"home-note-menu-container\":\"note-card_home-note-menu-container__YJ73V\",\"menu-icon\":\"note-card_menu-icon__1YvCs\"};"],"sourceRoot":""}